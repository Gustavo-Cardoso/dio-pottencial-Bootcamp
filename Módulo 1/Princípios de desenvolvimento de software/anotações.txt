-----------------------------------------------------------------------------
/*---------------------------------Introdução------------------------------*/
-----------------------------------------------------------------------------

Pensamento computacional: Não se restringe somente ao meio computacional e as ciências exetas, as é um processo
envolvido na expressão de soluções em passos computacionais ou algoritmos que podem ser implementados no computador.
                                                            (Aho, 2011; Lee, 2016)

Quando anotamos o que aprendemos, passamos o aprendizado da memória RAM para o HD.

O pensamento computacional não é uma disciplina acadêmina, mas sim uma halidade generalista, onde é possível utilizar
ela em: Matemática, leitura, escrita...

Com o pensamento computacional podemos solucionar qualquer problema, dividindo ele em 4 pilares, são eles:

* Decomposição -> Pegar o problema em um todo e dividir em problemas menores e com base nas soluções dos problemas 
                  menores, você consegue achar a solução. Por exemplo: Um bolo vamos usar a decomposição, e dividir 
                  em 3 partes: Massa, recheio e cobertura. Na marioria das vezes que "montarmos" um bolo, sempre terá 
                  esse padrão, em certos casos terá uma pquena mudança mas, que não irá fugir muito do padrão.

* Reconhecimento de padrões -> Identificar padrões ou tendências. Similaridades e diferenças entre os problemas. 

* Abstração -> Pegar o problema particular/ específico e elevar para uma forma generalista, ou seja, pego do mundo 
               concreto e levo para o mundo das ideias. Por exemplo: Se eu for criar uma classe chamada pessoa,
               ela teria, um nome, idade, altura, peso...

* Desing de algoritmos -> Aqui definimos a solução do problema. Usando tudo que foi feito anteriormente 


-----------------------------------------------------------------------------
/*-------------------------Habilidades Complementares----------------------*/
-----------------------------------------------------------------------------

Raciocíio lógico e aperfeiçoamento.

Raciocíio lógico: è uma forma de pensamento estruturado, ou raciocínio, que permite encontrar a conclusão ou determinar 
a resolução de um problema. Quanto mais eu treino, melhor fica.

Pode haver 3 classificações:

* Indução: Vem a partir da observação (fenômeno observado) e a partir disso é possível criar leis e teorias 
           relacionada a observação, ou seja, eu induso que "tal coisa" acontece devido a "tal observação". -> Ciências Experimentais.

* Dedução: É o inverso da indução. Onde que a partir de leis e teorias eu deduso previsões e explicações. -> Ciências Exatas.

* Abdução: A partir de uma conclusão eu tiro uma premissa. Por exemplo; a grama está molhada, logo deve ter chovido. 


                          -> Abdução
            ->  Sintética 
Inferência                -> Indução

            ->  Analítica -> Dedução


Aperfeiçoamento:

Melhoramento, Aprimoramento e Refinamento -> Melhor uso de recursos e mellhorar códigos e algoritmos.

-----------------------------------------------------------------------------
/*-------------------------Pilares: Decomposição---------------------------*/
-----------------------------------------------------------------------------

"Se você tem um problema que você não consegue resolver, existe um problema mais fácil que você pode resolver: Encontre-o"
                                                                                George polya - professor e matemático

É quebra/seguimentar/decompor o problema.

Estratégias:

Análise: Estudar e explorar o contexto do problema afim de decompor em elementos constituíntes .

Síntese: Ideia de construção, onde eu combino os elementos utilizando o problema original (Ela é um passo a passo), onde primeiro 
é necessário fazer a análise e depois recombinar/recompor o problema original afim de fazer sentido (Fundir os elementos de 
maneira coerente/ reunir elementosdistintos em um único elemento).

E qual a ordem de execução dessas tarefas menores (divisão do problema original)?

Elas podem ser sequêncial ou paralelo, para definir qual usar, vai depender do contexto, o que eu preciso...

Sequêncial: Dependência entre tarefas, executadas em "fila". 

Paralelo: Tarefas podem ser executadas juntas. Maior eficiência e menos tempo para desenvolvimento (porém depende do contexto).

Como decompor? Identificar ou coletar os dados -> Agregar os dados -> Funcionalidades
        Por exemplo: Cozinhar

* Identifico os ingredientes
* Determinar as etapas
* Executar cada etapa
* Agregas (juntar) os ingredientes para finalizar (recompor com coerência)

outro exemplo, criar um app

* Finalidade
* Interface
* Funcionalidades
* Pré-requisitos
-----------------------------------------------------------------------------
/*-----------------------------Pilares: Padrões----------------------------*/
-----------------------------------------------------------------------------

Padrão: modelo/referência/estrutura invariante/repetição/constante

Por que determinar padrões?

Para generalizar, com objetico de obter resolução para problemas diferentes.

Áreas que utilizam o reconhecimento de padrões: Machine learning, redes neurais, inteligência artificial e ciência de dados.

-----------------------------------------------------------------------------
/*-----------------------------Pilares: Abstração--------------------------*/
-----------------------------------------------------------------------------

-----------------------------------------------------------------------------
/*---------------------------Pilares: Algoritmos---------------------------*/
-----------------------------------------------------------------------------

-----------------------------------------------------------------------------
/*------------------Estudo de caso conceitual: Perdido---------------------*/
-----------------------------------------------------------------------------

-----------------------------------------------------------------------------
/*------------Estudo de caso aplicado: Soma de um intervalo----------------*/
-----------------------------------------------------------------------------

-----------------------------------------------------------------------------
/*-------------Estudo de caso aplicado: Adivinhe um número-----------------*/
-----------------------------------------------------------------------------
